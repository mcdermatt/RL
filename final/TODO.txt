
TODO------------------------------------------------

Visualization

	figure out how to use @window.event within class

	make visualization class
		armV8RenderTestV3 works but is VERY crude

		move around scene with mouse

	make accurate real time simulation

	generate obj files of v9 robot


Performance
	Don't change up x0 and reevaluate solution vector for each next step if external loads on system don't change 
		(evaluate next points as y = odeint(...))  

		if you re-evaluate at every point you are literally just doing numerical integration and performace will be horrible

Dynamics
	Should I compensate for gravity or not? 
		It's kinda the perfect external load

	if I don't, do I not have to cancel dynamics? Just flopping the arm around should leave enough of a signature of friction parameters?

		cancelling dynamics could potentailly make things more difficult (when estimating parameters)	

Validation:
	
	Determine value function
		how long to wait between t = 0 and when endoint error is calculated?
			instantly stop considering points for error after robot reaches impossibe to reach space

	Start with just simulated arm





DONE-------------------------------------------------

Visualization
	test old visualization model with newly generated path
		works with arm roboticArm/humanPoseEstimation/v8rendertest3

	make "viz" class - much cleaner than old code

Use heaviside func to model stick-slip friction
	-wrote heaviside func into EOM solver script, scipy ODEint is having trouble handling piecewise funcs

	-might(?) try using the Pade Approximant

	-look into alternate forms of sympy codegen - check out Theano

	-> DiracDelta should be able to do the same thing as Heaviside
		integral(DiracDelta) = Heaviside

looks like scipy-integrate does not play nicely with analytical integration
	-going to try using the sympy integration tools - need to learn them first

	-check out scipy.integrate.solve_ivp
		-have to set up variable like a function(?)

	good news! we're getting all the way to line 264 with the step func, so kanes method is working fine

		Try to reformulate friction using DiracDelta instead of Heaviside



Ice Box-----------------------------------------------


Lambdify vs NumPy / Scipy for performance


pretty_print() is not pretty enough